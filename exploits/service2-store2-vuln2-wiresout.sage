#!/usr/bin/env python3
import sys
from hashlib import sha256
from Crypto.Cipher import AES
from service2_store2_common import Client, register_random_user, get_token, bits2bytes, xor, get_b

load("service2_store2_common_sage.sage")


def exploit(ip, target_user):
    username, password = register_random_user(ip)
    token = get_token(ip, username, password)
    client = Client(ip, token)
    pub = bytes.fromhex(client.get_public(target_user))
    circ, (N, cc, xx) = client.run_function(2, target_user, b"\0"*16)
    m = [el[0] for el in cc]
    enc_B = [f'{x:010x}' for x in m]

    w = circ["wires_out"][0]
    R = xor(bytes.fromhex(w[0]), bytes.fromhex(w[1]))
    enc_B_all = [[x, xor(R, bytes.fromhex(x)).hex()] for x in enc_B]

    bdata = get_b(circ["gates"], circ["enc_A"], enc_B_all)
    # print(bdata)
    keys = get_key(bdata)
    # print(keys)
    for key in keys:
        cipher = AES.new(key, AES.MODE_ECB)
        flag = cipher.decrypt(pub)
        try:
            return flag.decode()
        except UnicodeDecodeError:
            continue


if __name__ == "__main__":
    team_id = sys.argv[1]
    flag_id = sys.argv[2]
    ip = f"10.60.{team_id}.1"
    print(exploit(ip, flag_id))
